// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  firstname String?
  lastname  String?
  email     String    @unique
  password  String
  role      Role      @default(STUDENT)
  Token     Token[]
  products  Product[] @relation("UserProducts")
}

model Token {
  id        String   @id @default(uuid())
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  token     String   @unique
  type      String // "access", "refresh", "validation"
  createdAt DateTime @default(now())
  expiresAt DateTime
  isRevoked Boolean  @default(false)

  @@index([userId, type])
}

model Product {
  id          Int       @id @default(autoincrement())
  link        String
  description String?
  price       Float
  title       String
  userId      Int
  user        User      @relation("UserProducts", fields: [userId], references: [id], onDelete: Cascade)
  category    Category?
  niveau      Niveau?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime?
}

enum Role {
  ADMIN
  STUDENT
  TEACHER
}

enum Category {
  MATH
  SCIENCE
}

enum Niveau {
  FIRST
  SECOND
  THIRD
  FOURTH
  FIFTH
  SIXTH
}
